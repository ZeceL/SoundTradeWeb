@model SoundTradeWebApp.Models.ViewModels.IndexPageViewModel
@{
    ViewData["Title"] = "Главная страница";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@* --- Секция "Рекомендуем" --- *@
<div class="song-section">
    <h2>Рекомендуем</h2>

    @if (Model.RecommendedTracks == null || !Model.RecommendedTracks.Any())
    {
        <p style="color: #ccc;">Рекомендованные треки пока отсутствуют.</p>
    }
    else
    {
        <div class="song-list-detailed">
            @foreach (var track in Model.RecommendedTracks)
            {
                <div class="song-item" data-track-id="@track.Id" style="background: #222; color: #ccc; padding: 15px; width: 90%; max-width: 600px; margin-bottom: 15px; border-radius: 8px; text-align: center; box-shadow: 0 2px 5px rgba(0,0,0,0.2);">
                    <h3 style="color: #eee; margin-bottom: 5px;">@Html.DisplayFor(modelItem => track.Title)</h3>
                    <p style="color: #aaa; margin-bottom: 10px;">@Html.DisplayFor(modelItem => track.ArtistName)</p>
                    <p style="font-size: 0.9em; color: #999; margin-bottom: 15px;">
                        @if (!string.IsNullOrEmpty(track.Genre))
                        {
                            <span style="margin-right: 10px;">Жанр: @track.Genre</span>
                        }
                    </p>
                    <button class="play-song-btn" data-song-url="@track.AudioFilePath" style="padding: 8px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">Слушать</button>
                </div>
            }
        </div>
    }
</div>

@* --- Секция "Поп музыка" --- *@
<div class="song-section">
    <h2>Поп музыка</h2>
    @if (Model.PopTracks == null || !Model.PopTracks.Any())
    {
        <p style="color: #ccc;">Поп треки пока отсутствуют.</p>
    }
    else
    {
        <div class="song-list-detailed">
            @* Используем тот же класс для стилизации *@
            @foreach (var track in Model.PopTracks)
            {
                <div class="song-item" data-track-id="@track.Id" style="background: #222; color: #ccc; padding: 15px; width: 90%; max-width: 600px; margin-bottom: 15px; border-radius: 8px; text-align: center; box-shadow: 0 2px 5px rgba(0,0,0,0.2);">
                    <h3 style="color: #eee; margin-bottom: 5px;">@Html.DisplayFor(modelItem => track.Title)</h3>
                    <p style="color: #aaa; margin-bottom: 10px;">@Html.DisplayFor(modelItem => track.ArtistName)</p>
                    <p style="font-size: 0.9em; color: #999; margin-bottom: 15px;">
                        @if (!string.IsNullOrEmpty(track.Genre))
                        {
                            <span style="margin-right: 10px;">Жанр: @track.Genre</span>
                        }
                    </p>
                    <button class="play-song-btn" data-song-url="@track.AudioFilePath" style="padding: 8px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">Слушать</button>
                </div>
            }
        </div>
    }
</div>

@* --- Секция "Рок музыка" --- *@
<div class="song-section">
    <h2>Рок музыка</h2>
    @if (Model.RockTracks == null || !Model.RockTracks.Any())
    {
        <p style="color: #ccc;">Рок треки пока отсутствуют.</p>
    }
    else
    {
        <div class="song-list-detailed">
            @* Используем тот же класс для стилизации *@
            @foreach (var track in Model.RockTracks)
            {
                <div class="song-item" data-track-id="@track.Id" style="background: #222; color: #ccc; padding: 15px; width: 90%; max-width: 600px; margin-bottom: 15px; border-radius: 8px; text-align: center; box-shadow: 0 2px 5px rgba(0,0,0,0.2);">
                    <h3 style="color: #eee; margin-bottom: 5px;">@Html.DisplayFor(modelItem => track.Title)</h3>
                    <p style="color: #aaa; margin-bottom: 10px;">@Html.DisplayFor(modelItem => track.ArtistName)</p>
                    <p style="font-size: 0.9em; color: #999; margin-bottom: 15px;">
                        @if (!string.IsNullOrEmpty(track.Genre))
                        {
                            <span style="margin-right: 10px;">Жанр: @track.Genre</span>
                        }
                    </p>
                    <button class="play-song-btn" data-song-url="@track.AudioFilePath" style="padding: 8px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">Слушать</button>
                </div>
            }
        </div>
    }
</div>

@* --- Секция "Хип-хоп музыка" --- *@
<div class="song-section">
    <h2>Хип-хоп музыка</h2>
    @if (Model.HipHopTracks == null || !Model.HipHopTracks.Any())
    {
        <p style="color: #ccc;">Хип-хоп треки пока отсутствуют.</p>
    }
    else
    {
        <div class="song-list-detailed">
            @* Используем тот же класс для стилизации *@
            @foreach (var track in Model.HipHopTracks)
            {
                <div class="song-item" data-track-id="@track.Id" style="background: #222; color: #ccc; padding: 15px; width: 90%; max-width: 600px; margin-bottom: 15px; border-radius: 8px; text-align: center; box-shadow: 0 2px 5px rgba(0,0,0,0.2);">
                    <h3 style="color: #eee; margin-bottom: 5px;">@Html.DisplayFor(modelItem => track.Title)</h3>
                    <p style="color: #aaa; margin-bottom: 10px;">@Html.DisplayFor(modelItem => track.ArtistName)</p>
                    <p style="font-size: 0.9em; color: #999; margin-bottom: 15px;">
                        @if (!string.IsNullOrEmpty(track.Genre))
                        {
                            <span style="margin-right: 10px;">Жанр: @track.Genre</span>
                        }
                    </p>
                    <button class="play-song-btn" data-song-url="@track.AudioFilePath" style="padding: 8px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">Слушать</button>
                </div>
            }
        </div>
    }
</div>

@* --- Секция "Джаз музыка" --- *@
<div class="song-section">
    <h2>Джаз музыка</h2>
    @if (Model.JazzTracks == null || !Model.JazzTracks.Any())
    {
        <p style="color: #ccc;">Джаз треки пока отсутствуют.</p>
    }
    else
    {
        <div class="song-list-detailed">
            @* Используем тот же класс для стилизации *@
            @foreach (var track in Model.JazzTracks)
            {
                <div class="song-item" data-track-id="@track.Id" style="background: #222; color: #ccc; padding: 15px; width: 90%; max-width: 600px; margin-bottom: 15px; border-radius: 8px; text-align: center; box-shadow: 0 2px 5px rgba(0,0,0,0.2);">
                    <h3 style="color: #eee; margin-bottom: 5px;">@Html.DisplayFor(modelItem => track.Title)</h3>
                    <p style="color: #aaa; margin-bottom: 10px;">@Html.DisplayFor(modelItem => track.ArtistName)</p>
                    <p style="font-size: 0.9em; color: #999; margin-bottom: 15px;">
                        @if (!string.IsNullOrEmpty(track.Genre))
                        {
                            <span style="margin-right: 10px;">Жанр: @track.Genre</span>
                        }
                    </p>
                    <button class="play-song-btn" data-song-url="@track.AudioFilePath" style="padding: 8px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">Слушать</button>
                </div>
            }
        </div>
    }
</div>

@* --- Секция "Электронная музыка" --- *@
<div class="song-section">
    <h2>Электронная музыка</h2>
    @if (Model.ElectronicTracks == null || !Model.ElectronicTracks.Any())
    {
        <p style="color: #ccc;">Электронные треки пока отсутствуют.</p>
    }
    else
    {
        <div class="song-list-detailed">
            @* Используем тот же класс для стилизации *@
            @foreach (var track in Model.ElectronicTracks)
            {
                <div class="song-item" data-track-id="@track.Id" style="background: #222; color: #ccc; padding: 15px; width: 90%; max-width: 600px; margin-bottom: 15px; border-radius: 8px; text-align: center; box-shadow: 0 2px 5px rgba(0,0,0,0.2);">
                    <h3 style="color: #eee; margin-bottom: 5px;">@Html.DisplayFor(modelItem => track.Title)</h3>
                    <p style="color: #aaa; margin-bottom: 10px;">@Html.DisplayFor(modelItem => track.ArtistName)</p>
                    <p style="font-size: 0.9em; color: #999; margin-bottom: 15px;">
                        @if (!string.IsNullOrEmpty(track.Genre))
                        {
                            <span style="margin-right: 10px;">Жанр: @track.Genre</span>
                        }
                    </p>
                    <button class="play-song-btn" data-song-url="@track.AudioFilePath" style="padding: 8px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">Слушать</button>
                </div>
            }
        </div>
    }
</div>

@* --- Обновленная секция стилей --- *@
@section Styles {
    <style>
        /* Стиль для простых списков (остается) */
        .song-list-simple {
            list-style: none;
            padding-left: 0;
        }

            .song-list-simple li {
                background: #282828;
                color: #ccc;
                padding: 8px 12px;
                margin-bottom: 5px;
                border-radius: 4px;
            }

        /* --- Стиль для контейнера рекомендованных треков (CSS Grid) --- */
        .song-list-detailed {
            display: grid; /* Используем Grid Layout */
            grid-template-columns: repeat(2, 1fr); /* Создаем 2 колонки равной ширины (1fr) */
            gap: 35px; /* Пространство между колонками и рядами */
            margin-top: 15px;
            padding-left: 150px; /* <---- ДОБАВЛЕН ОТСТУП СЛЕВА */
            padding-right: 10px; /* Оставляем небольшой отступ справа, если нужно */
        }

            /* Стили для .song-item внутри грида */
            .song-list-detailed .song-item {
                /* width: 100%; */ /* Уже установлено inline, но можно и здесь */
                box-sizing: border-box; /* Чтобы padding учитывался в ширине */
                /* Можно добавить другие стили для элементов внутри грида */
                transition: transform 0.2s ease;
            }

                .song-list-detailed .song-item:hover {
                    transform: translateY(-3px); /* Небольшой эффект при наведении */
                }

                .song-list-detailed .song-item button:hover {
                    filter: brightness(1.1);
                }

        /* --- Адаптивность (пример): для маленьких экранов делаем 1 колонку --- */
        @@media (max-width: 768px) {
            .song-list-detailed {
                grid-template-columns: 1fr; /* Одна колонка на маленьких экранах */
                padding: 0; /* Убираем боковые отступы */
            }

                .song-list-detailed .song-item {
                    width: 95%; /* Чуть меньше ширины экрана */
                    margin: 0 auto 15px auto; /* Центрируем и добавляем отступ снизу */
                }
        }
    </style>
}